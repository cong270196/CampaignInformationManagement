/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import dao.PricesDAO;
import dao.Products_PricesDAO;
import dto.Prices;
import dto.Products_Prices;
import java.text.ParseException;
import java.text.ParsePosition;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class Price extends javax.swing.JInternalFrame {

    PricesDAO pricedao = null;
    Products_PricesDAO ppdao = null;

    String productid = new Manager().productid;

    /**
     * Creates new form Price
     */
    public Price() {
        initComponents();
        pricedao = new PricesDAO();
        ppdao = new Products_PricesDAO();
        //productid = new Manager().productid;
        loadTablePrice(ppdao.readAll());

        javax.swing.plaf.InternalFrameUI ui = this.getUI();
        ((javax.swing.plaf.basic.BasicInternalFrameUI) ui).setNorthPane(null);
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnBg = new javax.swing.JPanel();
        spPrice = new javax.swing.JScrollPane();
        tbPrice = new javax.swing.JTable();
        tfStartday = new javax.swing.JTextField();
        tfEndday = new javax.swing.JTextField();
        btCreate = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfPrice = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(730, 450));

        pnBg.setBackground(new java.awt.Color(255, 255, 255));
        pnBg.setPreferredSize(new java.awt.Dimension(730, 450));
        pnBg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        spPrice.setBackground(new java.awt.Color(255, 255, 255));
        spPrice.setBorder(null);

        tbPrice.setAutoCreateRowSorter(true);
        tbPrice.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tbPrice.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tbPrice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbPrice.setGridColor(new java.awt.Color(255, 255, 255));
        tbPrice.setRowHeight(25);
        tbPrice.setSelectionBackground(new java.awt.Color(122, 72, 221));
        tbPrice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbPriceMouseClicked(evt);
            }
        });
        spPrice.setViewportView(tbPrice);

        pnBg.add(spPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, 564, 310));

        tfStartday.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(85, 65, 118)));
        pnBg.add(tfStartday, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 50, 130, -1));

        tfEndday.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(85, 65, 118)));
        pnBg.add(tfEndday, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 50, 130, -1));

        btCreate.setText("Create");
        btCreate.setPreferredSize(new java.awt.Dimension(80, 30));
        btCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCreateActionPerformed(evt);
            }
        });
        pnBg.add(btCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 40, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(85, 65, 118));
        jLabel2.setText("Start Day (yyyy-MM-dd)");
        pnBg.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 30, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(85, 65, 118));
        jLabel3.setText("End Day (yyyy-MM-dd)");
        pnBg.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 30, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(85, 65, 118));
        jLabel4.setText("Price ($)");
        pnBg.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, -1, -1));

        tfPrice.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(85, 65, 118)));
        pnBg.add(tfPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 130, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnBg, javax.swing.GroupLayout.DEFAULT_SIZE, 714, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnBg, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbPriceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPriceMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tbPriceMouseClicked

    private void btCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCreateActionPerformed
        try {
            if (tfPrice.getText().trim().equals("") || tfStartday.getText().trim().equals("") || tfEndday.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(null, "Please complete all information");
            } else if (!isLegalDate(tfStartday.getText().trim()) || !isLegalDate(tfEndday.getText().trim())) {
                JOptionPane.showMessageDialog(null, "Enter the date incorrectly");
            } else {
                int pid = 1;
                while (true) {
                    boolean checkpid = true;
                    for (Prices pp : pricedao.readAll()) {
                        if (pp.getPriceid() == pid) {
                            checkpid = false;
                            break;
                        }
                    }
                    if (checkpid) {
                        break;
                    }
                    pid++;
                }
                int price = Integer.parseInt(tfPrice.getText().trim());
                Date startday = new SimpleDateFormat("yyyy-MM-dd").parse(tfStartday.getText().trim());
                Date endday = new SimpleDateFormat("yyyy-MM-dd").parse(tfEndday.getText().trim());
                Prices p = new Prices(pid, price, startday, endday);

                int ppid = 1;
                while (true) {
                    boolean checkppid = true;
                    for (Products_Prices pp : ppdao.readAll()) {
                        if (pp.getPriceid() == ppid) {
                            checkppid = false;
                            break;
                        }
                    }
                    if (checkppid) {
                        break;
                    }
                    ppid++;
                }
                Products_Prices pp = new Products_Prices(ppid, productid, p.getPriceid());
                if (pricedao.create(p) != null && ppdao.create(pp) != null) {
                    JOptionPane.showMessageDialog(null, "Success");
                    loadTablePrice(ppdao.readAll());
                    tfPrice.setText("");
                    tfStartday.setText("");
                    tfEndday.setText("");
                }
            }
        } catch (ParseException ex) {
            Logger.getLogger(Price.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btCreateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCreate;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel pnBg;
    private javax.swing.JScrollPane spPrice;
    private javax.swing.JTable tbPrice;
    private javax.swing.JTextField tfEndday;
    private javax.swing.JTextField tfPrice;
    private javax.swing.JTextField tfStartday;
    // End of variables declaration//GEN-END:variables

    boolean isLegalDate(String s) {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        sdf.setLenient(false);
        return sdf.parse(s, new ParsePosition(0)) != null;
    }

    private void loadTablePrice(List<Products_Prices> readAll) {
        Vector column = new Vector();
        column.add("PRICE ($)");
        column.add("START DAY");
        column.add("END DAY");
        Vector rows = new Vector();
        for (Products_Prices pp : readAll) {
            if (pp.getProductid().equals(productid)) {
                for (Prices p : pricedao.readAll()) {
                    if (pp.getPriceid() == p.getPriceid()) {
                        Vector row = new Vector();
                        row.add(p.getPrice());
                        row.add(p.getStartday());
                        row.add(p.getEndday());
                        rows.add(row);
                    }
                }
            }
        }
        tbPrice.setModel(new DefaultTableModel(rows, column));
        tbPrice.updateUI();
        spPrice.setViewportView(this.tbPrice);
    }
}
